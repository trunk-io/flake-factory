name: Javascript Tests

on:
  schedule:
    - cron: 0 */6 * * *
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: public-amd64-small

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Dependencies
        run: |
          pnpm install

      - name: Run Mocha Tests
        uses: trunk-io/analytics-uploader@main
        with:
          # Path to your test results.
          junit-paths: "**/mocha_test.xml"
          # Provide your Trunk organization slug.
          org-slug: trunk-staging-org
          # Provide your Trunk API token as a GitHub secret.
          token: ${{ secrets.TRUNK_STAGING_ORG_API_TOKEN }}
          run: npm run mocha-test
        env:
          TRUNK_PUBLIC_API_ADDRESS: https://api.trunk-staging.io

      - name: Run Jest Tests
        if: ${{ always() }}
        uses: trunk-io/analytics-uploader@main
        with:
          # Path to your test results.
          junit-paths: "**/*_test.xml,**/junitresults-*.xml"
          # Provide your Trunk organization slug.
          org-slug: trunk-staging-org
          # Provide your Trunk API token as a GitHub secret.
          token: ${{ secrets.TRUNK_STAGING_ORG_API_TOKEN }}
          run: npm run jest-test
        env:
          TRUNK_PUBLIC_API_ADDRESS: https://api.trunk-staging.io

      - name: Run Jasmine Tests
        if: ${{ always() }}
        uses: trunk-io/analytics-uploader@main
        with:
          # Path to your test results.
          junit-paths: "**/*_test.xml,**/junitresults-*.xml"
          # Provide your Trunk organization slug.
          org-slug: trunk-staging-org
          # Provide your Trunk API token as a GitHub secret.
          token: ${{ secrets.TRUNK_STAGING_ORG_API_TOKEN }}
          run: npm run jasmine-test
        env:
          TRUNK_PUBLIC_API_ADDRESS: https://api.trunk-staging.io
